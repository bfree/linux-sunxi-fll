--- a/drivers/net/wireless/ath/ath5k/base.c
+++ b/drivers/net/wireless/ath/ath5k/base.c
@@ -83,6 +83,9 @@ module_param_named(no_hw_rfkill_switch,
 								bool, S_IRUGO);
 MODULE_PARM_DESC(no_hw_rfkill_switch, "Ignore the GPIO RFKill switch state");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
 
 /* Module info */
 MODULE_AUTHOR("Jiri Slaby");
@@ -2509,6 +2512,9 @@ ath5k_init_ah(struct ath5k_hw *ah, const
 	if (ret)
 		goto err_irq;
 
+	if (modparam_override_countrycode != -1)
+		ah->ah_capabilities.cap_eeprom.ee_regdomain = modparam_override_countrycode;
+
 	/* Set up multi-rate retry capabilities */
 	if (ah->ah_capabilities.cap_has_mrr_support) {
 		hw->max_rates = 4;
--- a/drivers/net/wireless/ath/ath9k/htc_drv_init.c
+++ b/drivers/net/wireless/ath/ath9k/htc_drv_init.c
@@ -30,6 +30,10 @@ int htc_modparam_nohwcrypt;
 module_param_named(nohwcrypt, htc_modparam_nohwcrypt, int, 0444);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define CHAN2G(_freq, _idx)  { \
 	.center_freq = (_freq), \
 	.hw_value = (_idx), \
@@ -799,6 +803,10 @@ static int ath9k_init_device(struct ath9
 		goto err_init;
 
 	ah = priv->ah;
+
+	if (modparam_override_countrycode != -1)
+		ath9k_hw_regulatory(ah)->current_rd = modparam_override_countrycode;
+
 	common = ath9k_hw_common(ah);
 	ath9k_set_hw_capab(priv, hw);
 
--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -46,6 +46,10 @@ static int ath9k_btcoex_enable;
 module_param_named(btcoex_enable, ath9k_btcoex_enable, int, 0444);
 MODULE_PARM_DESC(btcoex_enable, "Enable wifi-BT coexistence");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 bool is_ath9k_unloaded;
 /* We use the hw_value as an index into our private channel structure */
 
@@ -781,6 +785,10 @@ int ath9k_init_device(u16 devid, struct
 		goto error_init;
 
 	ah = sc->sc_ah;
+
+	if (modparam_override_countrycode != -1)
+		ath9k_hw_regulatory(ah)->current_rd = modparam_override_countrycode;
+
 	common = ath9k_hw_common(ah);
 	ath9k_set_hw_capab(sc, hw);
 
--- a/drivers/net/wireless/ath/carl9170/main.c
+++ b/drivers/net/wireless/ath/carl9170/main.c
@@ -56,6 +56,10 @@ int modparam_noht;
 module_param_named(noht, modparam_noht, int, S_IRUGO);
 MODULE_PARM_DESC(noht, "Disable MPDU aggregation.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define RATE(_bitrate, _hw_rate, _txpidx, _flags) {	\
 	.bitrate	= (_bitrate),			\
 	.flags		= (_flags),			\
@@ -1945,6 +1949,9 @@ int carl9170_register(struct ar9170 *ar)
 	if (err)
 		return err;
 
+	if (modparam_override_countrycode != -1)
+		regulatory->current_rd = modparam_override_countrycode;
+
 	err = ath_regd_init(regulatory, ar->hw->wiphy,
 			    carl9170_reg_notifier);
 	if (err)
