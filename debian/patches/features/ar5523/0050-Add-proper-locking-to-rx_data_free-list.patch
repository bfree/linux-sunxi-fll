From c998c1f6da5132ca5af4258f737a62d47c7dd890 Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Thu, 27 Sep 2012 17:05:54 +0200
Subject: [PATCH 50/82] Add proper locking to rx_data_free list

Oops. Locking was missing in the refill work.
---
 ar5523.c |   19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -763,8 +763,18 @@ static void ar5523_rx_refill_work(struct
 	unsigned long flags;
 	int error;
 
-	while (!list_empty(&ar->rx_data_free)) {
-		data = (struct ar5523_rx_data *) ar->rx_data_free.next;
+	ar5523_dbg(ar, "%s\n", __func__);
+	do {
+		spin_lock_irqsave(&ar->rx_data_list_lock, flags);
+
+		if (!list_empty(&ar->rx_data_free))
+			data = (struct ar5523_rx_data *) ar->rx_data_free.next;
+		else
+			data = NULL;
+		spin_unlock_irqrestore(&ar->rx_data_list_lock, flags);
+
+		if (!data)
+			goto done;
 
 		data->skb = alloc_skb(ar->rxbufsz, GFP_KERNEL);
 		if (!data->skb) {
@@ -776,7 +786,6 @@ static void ar5523_rx_refill_work(struct
 				  ar5523_data_rx_pipe(ar->dev), data->skb->data,
 				  ar->rxbufsz, ar5523_data_rx_cb, data);
 
-
 		error = usb_submit_urb(data->urb, GFP_KERNEL);
 		if (error) {
 			kfree_skb(data->skb);
@@ -789,7 +798,9 @@ static void ar5523_rx_refill_work(struct
 		list_move(&data->list, &ar->rx_data_used);
 		spin_unlock_irqrestore(&ar->rx_data_list_lock, flags);
 		atomic_dec(&ar->rx_data_free_cnt);
-	}
+	} while (true);
+done:
+	return;
 }
 
 static void ar5523_cancel_rx_bufs(struct ar5523 *ar)
