From 8578e87bd8e9cdbb05d26fb55ce9bb200af2b3ec Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Fri, 7 Sep 2012 21:06:57 +0200
Subject: [PATCH 20/82] Update LED code

Synch with FreeBSD code.
---
 ar5523.c |   52 +++++++++++++++++++++++++++-------------------------
 ar5523.h |   34 +++++++++++++++++-----------------
 2 files changed, 44 insertions(+), 42 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -564,31 +564,36 @@ static void ar5523_stat(unsigned long ar
 	ieee80211_queue_work(ar->hw, &ar->stat_work);
 }
 
-static int ar5523_set_led(struct ar5523 *ar, int which, int on)
+static int ar5523_set_ledsteady(struct ar5523 *ar, int lednum, int ledmode)
 {
-	struct ar5523_cmd_led led;
+	struct uath_cmd_ledsteady led;
 
-	led.which = cpu_to_be32(which);
-	led.state = cpu_to_be32(on ? AR5523_LED_ON : AR5523_LED_OFF);
+	led.lednum = cpu_to_be32(lednum);
+	led.ledmode = cpu_to_be32(ledmode);
 
-	ar5523_dbg(ar, "switching %s led %s\n",
-		       (which == AR5523_LED_LINK) ? "link" : "activity",
-		       on ? "on" : "off");
-
-	return ar5523_cmd_write(ar, AR5523_CMD_SET_LED, &led, sizeof(led), 0);
+	ar5523_dbg(ar, "set %s led %s (steady)\n",
+		   (lednum == UATH_LED_LINK) ? "link" : "activity",
+		   ledmode ? "on" : "off");
+	return ar5523_cmd_write(ar, WDCMSG_SET_LED_STEADY, &led, sizeof(led),
+		0);
 }
 
-static int ar5523_set_xled(struct ar5523 *ar, int which)
+static int ar5523_set_ledblink(struct ar5523 *ar, int lednum, int ledmode,
+				int blinkrate, int slowmode)
 {
-	struct ar5523_cmd_xled xled;
+	struct uath_cmd_ledblink led;
+
+	led.lednum = cpu_to_be32(lednum);
+	led.ledmode = cpu_to_be32(ledmode);
+	led.blinkrate = cpu_to_be32(blinkrate);
+	led.slowmode = cpu_to_be32(slowmode);
 
-	memset(&xled, 0, sizeof(xled));
-	xled.which = cpu_to_be32(which);
-	xled.rate = cpu_to_be32(1);
-	xled.mode = cpu_to_be32(2);
+	ar5523_dbg(ar, "set %s led %s (blink)\n",
+		   (lednum == UATH_LED_LINK) ? "link" : "activity",
+		   ledmode ? "on" : "off");
 
-	return ar5523_cmd_write(ar, AR5523_CMD_SET_XLED,
-				&xled, sizeof(xled), 0);
+	return ar5523_cmd_write(ar, WDCMSG_SET_LED_BLINK, &led, sizeof(led),
+				 0);
 }
 
 static int ar5523_set_rxfilter(struct ar5523 *ar, u32 bits, u32 op)
@@ -955,6 +960,7 @@ static int ar5523_start(struct ieee80211
 	    UATH_FILTER_RX_BCAST,
 	    UATH_FILTER_OP_SET);
 
+	ar5523_set_ledsteady(ar, UATH_LED_ACTIVITY, UATH_LED_ON);
 	ar5523_dbg(ar, "start OK\n");
 
 err:
@@ -970,8 +976,8 @@ static void ar5523_stop(struct ieee80211
 
 	mutex_lock(&ar->mutex);
 
-	ar5523_set_led(ar, AR5523_LED_LINK, 0);
-	ar5523_set_led(ar, AR5523_LED_ACTIVITY, 0);
+	ar5523_set_ledsteady(ar, UATH_LED_LINK, UATH_LED_OFF);
+	ar5523_set_ledsteady(ar, UATH_LED_ACTIVITY, UATH_LED_OFF);
 
 	ar5523_cmd_write(ar, WDCMSG_TARGET_STOP, NULL, 0, 0);
 
@@ -1287,17 +1293,13 @@ static void ar5523_bss_info_changed(stru
 		}
 
 		/* turn link LED on */
-		ar5523_set_led(ar, AR5523_LED_LINK, 1);
-
-		/* make activity LED blink */
-		ar5523_set_xled(ar, 1);
+		ar5523_set_ledsteady(ar, UATH_LED_LINK, UATH_LED_ON);
 
 		/* start statistics timer */
 //		mod_timer(&ar->stat_timer, jiffies + HZ);
 
 	} else {
-		ar5523_set_led(ar, AR5523_LED_LINK, 0);
-		ar5523_set_led(ar, AR5523_LED_ACTIVITY, 0);
+		ar5523_set_ledsteady(ar, UATH_LED_LINK, UATH_LED_OFF);
 	}
 
 out_unlock:
--- a/drivers/net/wireless/ath/ar5523/ar5523.h
+++ b/drivers/net/wireless/ath/ar5523/ar5523.h
@@ -121,8 +121,6 @@ struct ar5523_cmd_hdr {
 
 
 /* OLD commands: REMOVE! */
-#define AR5523_CMD_SET_LED	0x17
-#define AR5523_CMD_SET_XLED	0x18
 #define AR5523_CMD_SET_QUEUE	0x3a
 #define AR5523_CMD_RESET_QUEUE	0x3b
 
@@ -281,23 +279,25 @@ struct ar5523_cmd_create_connection {
 	struct ar5523_cmd_connection_attr	connattr;
 } __packed;
 
-/* structure for command AR5523_CMD_SET_LED */
-struct ar5523_cmd_led {
-	__be32		which;
-#define AR5523_LED_LINK		0
-#define AR5523_LED_ACTIVITY	1
-
-	__be32		state;
-#define AR5523_LED_OFF	0
-#define AR5523_LED_ON	1
-};
+struct uath_cmd_ledsteady {		/* WDCMSG_SET_LED_STEADY */
+	__be32	lednum;
+#define UATH_LED_LINK		0
+#define UATH_LED_ACTIVITY	1
+	__be32	ledmode;
+#define UATH_LED_OFF	0
+#define UATH_LED_ON	1
+} __packed;
+
+struct uath_cmd_ledblink {		/* WDCMSG_SET_LED_BLINK */
+	__be32	lednum;
+	__be32	ledmode;
+	__be32	blinkrate;
+	__be32	slowmode;
+} __packed;
 
-/* structure for command AR5523_CMD_SET_XLED */
-struct ar5523_cmd_xled {
-	__be32		which;
-	__be32		rate;
-	__be32		mode;
-};
+struct uath_cmd_ledstate {		/* WDCMSG_SET_LED_STATE */
+	__be32	connected;
+} __packed;
 
 /* structure for command AR5523_CMD_SET_QUEUE */
 struct ar5523_qinfo {
