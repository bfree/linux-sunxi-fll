From b2cd5867c847b430a603fc3ba662a3d00096ac01 Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Thu, 27 Sep 2012 20:36:36 +0200
Subject: [PATCH 52/82] Rip out QoS

It was not used and caused problem in the newer FW. Remove it for now.
---
 ar5523.c |   70 ++++++++++++++++++--------------------------------------------
 1 file changed, 20 insertions(+), 50 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -173,15 +173,6 @@ struct ar5523 {
 	struct ieee80211_vif	*vif;
 };
 
-struct ar5523_wme_settings {
-	u8	aifsn;
-	u8	logcwmin;
-	u8	logcwmax;
-	u16	txop;
-#define AR5523_TXOP_TO_US(txop)	((txop) << 5)
-	u8	acm;
-};
-
 /* flags for sending firmware commands */
 enum {
 	AR5523_CMD_FLAG_ASYNC	= (1 << 0),
@@ -595,20 +586,12 @@ static int ar5523_set_rxfilter(struct ar
 
 static int ar5523_reset_tx_queues(struct ar5523 *ar)
 {
-	int ac, error;
-
-	for (ac = 0; ac < 4; ac++) {
-		const __be32 qid = cpu_to_be32(ac);
+	__be32 qid = cpu_to_be32(0);
 
-		ar5523_dbg(ar, "resetting Tx queue %d\n", ac);
-
-		error = ar5523_cmd_write(ar, WDCMSG_RELEASE_TX_QUEUE,
-					 &qid, sizeof(qid), 0);
-		if (error)
-			break;
-	}
+	ar5523_dbg(ar, "resetting Tx queue\n");
 
-	return error;
+	return ar5523_cmd_write(ar, WDCMSG_RELEASE_TX_QUEUE,
+				 &qid, sizeof(qid), 0);
 }
 
 static int ar5523_set_chan(struct ar5523 *ar)
@@ -633,34 +616,21 @@ static int ar5523_set_chan(struct ar5523
 
 static int ar5523_wme_init(struct ar5523 *ar)
 {
-	static const struct ar5523_wme_settings uath_wme_11g[4] = {
-		{ 7, 4, 10,  0, 0 },	/* Background */
-		{ 3, 4, 10,  0, 0 },	/* Best-Effort */
-		{ 3, 3,  4, 26, 0 },	/* Video */
-		{ 2, 2,  3, 47, 0 }	/* Voice */
-	};
 	struct uath_cmd_txq_setup qinfo;
-	int ac, error;
 
-	ar5523_dbg(ar, "setting up Tx queues\n");
-	for (ac = 0; ac < 4; ac++) {
-		qinfo.qid	     = cpu_to_be32(ac);
-		qinfo.len	     = cpu_to_be32(sizeof(qinfo.attr));
-		qinfo.attr.priority  = cpu_to_be32(ac);	/* XXX */
-		qinfo.attr.aifs	     = cpu_to_be32(uath_wme_11g[ac].aifsn);
-		qinfo.attr.logcwmin  = cpu_to_be32(uath_wme_11g[ac].logcwmin);
-		qinfo.attr.logcwmax  = cpu_to_be32(uath_wme_11g[ac].logcwmax);
-		qinfo.attr.bursttime = cpu_to_be32(AR5523_TXOP_TO_US(
-					    uath_wme_11g[ac].txop));
-		qinfo.attr.mode	     = cpu_to_be32(uath_wme_11g[ac].acm);/*X?*/
-		qinfo.attr.qflags    = cpu_to_be32(1);	/* XXX? */
-
-		error = ar5523_cmd_write(ar, WDCMSG_SETUP_TX_QUEUE,
-					 &qinfo, sizeof(qinfo), 0);
-		if (error != 0)
-			break;
-	}
-	return error;
+	ar5523_dbg(ar, "setting up Tx queue\n");
+	qinfo.qid	     = cpu_to_be32(0);
+	qinfo.len	     = cpu_to_be32(sizeof(qinfo.attr));
+	qinfo.attr.priority  = cpu_to_be32(0);	/* XXX */
+	qinfo.attr.aifs	     = cpu_to_be32(3);
+	qinfo.attr.logcwmin  = cpu_to_be32(4);
+	qinfo.attr.logcwmax  = cpu_to_be32(10);
+	qinfo.attr.bursttime = cpu_to_be32(0);
+	qinfo.attr.mode	     = cpu_to_be32(0);
+	qinfo.attr.qflags    = cpu_to_be32(1);	/* XXX? */
+
+	return ar5523_cmd_write(ar, WDCMSG_SETUP_TX_QUEUE,
+				 &qinfo, sizeof(qinfo), 0);
 }
 
 static void ar5523_data_rx_cb(struct urb *urb)
@@ -957,7 +927,7 @@ static void ar5523_tx_work_locked(struct
 			break;
 
 		skb = data->skb;
-		txqid = 1;
+		txqid = 0;
 		txi = IEEE80211_SKB_CB(skb);
 		paylen = skb->len;
 		urb = usb_alloc_urb(0, GFP_KERNEL);
@@ -1059,7 +1029,7 @@ static int ar5523_start(struct ieee80211
 	ar5523_config(ar, CFG_RATE_CONTROL_ENABLE, 0x00000001);
 	ar5523_config(ar, CFG_DIVERSITY_CTL, 0x00000001);
 	ar5523_config(ar, CFG_ABOLT, 0x0000003f);
-	ar5523_config(ar, CFG_WME_ENABLED, 0x00000001);
+	ar5523_config(ar, CFG_WME_ENABLED, 0x00000000);
 
 	ar5523_config(ar, CFG_SERVICE_TYPE, 1);
 	ar5523_config(ar, CFG_TP_SCALE, 0x00000000);
