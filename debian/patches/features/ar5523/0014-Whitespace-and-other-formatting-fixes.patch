From 49035cf0d59384540feff96879fe8d14d3c7fb2e Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Sun, 2 Sep 2012 15:51:17 +0200
Subject: [PATCH 14/82] Whitespace and other formatting fixes

---
 ar5523.c |  132 +++++++++++++++++++++++++-------------------------------------
 1 file changed, 54 insertions(+), 78 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -222,7 +222,6 @@ static void free_tx_cmd(struct ar5523 *a
 	spin_unlock_irqrestore(&ar->tx_cmd_list_lock, irqflags);
 }
 
-
 static void ar5523_cmd_rx_cb(struct urb *urb)
 {
 	struct ar5523_tx_cmd *cmd = urb->context;
@@ -402,8 +401,7 @@ static int ar5523_cmd_read(struct ar5523
 	return ar5523_cmd(ar, code, idata, ilen, odata, olen, flags);
 }
 
-static int
-ar5523_config(struct ar5523 *ar, u32 reg, u32 val)
+static int ar5523_config(struct ar5523 *ar, u32 reg, u32 val)
 {
 	struct ar5523_write_mac write;
 	int error;
@@ -420,9 +418,8 @@ ar5523_config(struct ar5523 *ar, u32 reg
 	return error;
 }
 
-
-static int
-ar5523_config_multi(struct ar5523 *ar, u32 reg, const void *data, int len)
+static int ar5523_config_multi(struct ar5523 *ar, u32 reg, const void *data,
+				int len)
 {
 	struct ar5523_write_mac write;
 	int error;
@@ -441,10 +438,8 @@ ar5523_config_multi(struct ar5523 *ar, u
 	return error;
 }
 
-
-
-static int
-ar5523_get_status(struct ar5523 *ar, u32 which, void *odata, int olen)
+static int ar5523_get_status(struct ar5523 *ar, u32 which, void *odata,
+			      int olen)
 {
 	int error;
 
@@ -452,12 +447,12 @@ ar5523_get_status(struct ar5523 *ar, u32
 	error = ar5523_cmd_read(ar, WDCMSG_TARGET_GET_STATUS,
 	    &which, sizeof(which), odata, olen, AR5523_CMD_FLAG_MAGIC);
 	if (error != 0)
-		ar5523_err(ar, "could not read EEPROM offset 0x%02x\n", be32_to_cpu(which));
+		ar5523_err(ar, "could not read EEPROM offset 0x%02x\n",
+			   be32_to_cpu(which));
 	return error;
 }
 
-static int
-ar5523_get_capability(struct ar5523 *ar, u32 cap, u32 *val)
+static int ar5523_get_capability(struct ar5523 *ar, u32 cap, u32 *val)
 {
 	int error;
 
@@ -473,59 +468,52 @@ ar5523_get_capability(struct ar5523 *ar,
 	return (error);
 }
 
-
-static int
-ar5523_get_devcap(struct ar5523 *ar)
+static int ar5523_get_devcap(struct ar5523 *ar)
 {
-#define	GETCAP(x, v) do {				\
+#define	GETCAP(x) do {				\
 	error = ar5523_get_capability(ar, x, &cap);		\
 	if (error != 0)					\
 		return (error);				\
-	printk("Cap: "			\
+	ar5523_info(ar, "Cap: "			\
 	    "%s=0x%08x\n", #x, cap);	\
 } while (0)
 	int error;
 	u32 cap;
 
 	/* collect device capabilities */
-	GETCAP(CAP_TARGET_VERSION, cap->targetVersion);
-	GETCAP(CAP_TARGET_REVISION, cap->targetRevision);
-	GETCAP(CAP_MAC_VERSION, cap->macVersion);
-	GETCAP(CAP_MAC_REVISION, cap->macRevision);
-	GETCAP(CAP_PHY_REVISION, cap->phyRevision);
-	GETCAP(CAP_ANALOG_5GHz_REVISION, cap->analog5GhzRevision);
-	GETCAP(CAP_ANALOG_2GHz_REVISION, cap->analog2GhzRevision);
-
-	GETCAP(CAP_REG_DOMAIN, cap->regDomain);
-	GETCAP(CAP_REG_CAP_BITS, cap->regCapBits);
-#if 0
-	/* NB: not supported in rev 1.5 */
-	GETCAP(CAP_COUNTRY_CODE, cap->countryCode);
-#endif
-	GETCAP(CAP_WIRELESS_MODES, cap->wirelessModes);
-	GETCAP(CAP_CHAN_SPREAD_SUPPORT, cap->chanSpreadSupport);
-	GETCAP(CAP_COMPRESS_SUPPORT, cap->compressSupport);
-	GETCAP(CAP_BURST_SUPPORT, cap->burstSupport);
-	GETCAP(CAP_FAST_FRAMES_SUPPORT, cap->fastFramesSupport);
-	GETCAP(CAP_CHAP_TUNING_SUPPORT, cap->chapTuningSupport);
-	GETCAP(CAP_TURBOG_SUPPORT, cap->turboGSupport);
-	GETCAP(CAP_TURBO_PRIME_SUPPORT, cap->turboPrimeSupport);
-	GETCAP(CAP_DEVICE_TYPE, cap->deviceType);
-	GETCAP(CAP_WME_SUPPORT, cap->wmeSupport);
-	GETCAP(CAP_TOTAL_QUEUES, cap->numTxQueues);
-	GETCAP(CAP_CONNECTION_ID_MAX, cap->connectionIdMax);
-
-	GETCAP(CAP_LOW_5GHZ_CHAN, cap->low5GhzChan);
-	GETCAP(CAP_HIGH_5GHZ_CHAN, cap->high5GhzChan);
-	GETCAP(CAP_LOW_2GHZ_CHAN, cap->low2GhzChan);
-	GETCAP(CAP_HIGH_2GHZ_CHAN, cap->high2GhzChan);
-	GETCAP(CAP_TWICE_ANTENNAGAIN_5G, cap->twiceAntennaGain5G);
-	GETCAP(CAP_TWICE_ANTENNAGAIN_2G, cap->twiceAntennaGain2G);
-
-	GETCAP(CAP_CIPHER_AES_CCM, cap->supportCipherAES_CCM);
-	GETCAP(CAP_CIPHER_TKIP, cap->supportCipherTKIP);
-	GETCAP(CAP_MIC_TKIP, cap->supportMicTKIP);
-//	cap->supportCipherWEP = 1;	/* NB: always available */
+	GETCAP(CAP_TARGET_VERSION);
+	GETCAP(CAP_TARGET_REVISION);
+	GETCAP(CAP_MAC_VERSION);
+	GETCAP(CAP_MAC_REVISION);
+	GETCAP(CAP_PHY_REVISION);
+	GETCAP(CAP_ANALOG_5GHz_REVISION);
+	GETCAP(CAP_ANALOG_2GHz_REVISION);
+
+	GETCAP(CAP_REG_DOMAIN);
+	GETCAP(CAP_REG_CAP_BITS);
+	GETCAP(CAP_WIRELESS_MODES);
+	GETCAP(CAP_CHAN_SPREAD_SUPPORT);
+	GETCAP(CAP_COMPRESS_SUPPORT);
+	GETCAP(CAP_BURST_SUPPORT);
+	GETCAP(CAP_FAST_FRAMES_SUPPORT);
+	GETCAP(CAP_CHAP_TUNING_SUPPORT);
+	GETCAP(CAP_TURBOG_SUPPORT);
+	GETCAP(CAP_TURBO_PRIME_SUPPORT);
+	GETCAP(CAP_DEVICE_TYPE);
+	GETCAP(CAP_WME_SUPPORT);
+	GETCAP(CAP_TOTAL_QUEUES);
+	GETCAP(CAP_CONNECTION_ID_MAX);
+
+	GETCAP(CAP_LOW_5GHZ_CHAN);
+	GETCAP(CAP_HIGH_5GHZ_CHAN);
+	GETCAP(CAP_LOW_2GHZ_CHAN);
+	GETCAP(CAP_HIGH_2GHZ_CHAN);
+	GETCAP(CAP_TWICE_ANTENNAGAIN_5G);
+	GETCAP(CAP_TWICE_ANTENNAGAIN_2G);
+
+	GETCAP(CAP_CIPHER_AES_CCM);
+	GETCAP(CAP_CIPHER_TKIP);
+	GETCAP(CAP_MIC_TKIP);
 	return 0;
 }
 
@@ -576,7 +564,6 @@ static int ar5523_set_xled(struct ar5523
 				&xled, sizeof(xled), 0);
 }
 
-
 static int ar5523_set_rxfilter(struct ar5523 *ar, u32 bits, u32 op)
 {
 	struct ar5523_cmd_rx_filter rxfilter;
@@ -665,8 +652,7 @@ static int ar5523_wme_init(struct ar5523
 	return error;
 }
 
-static int
-ar5523_switch_channel(struct ar5523 *ar)
+static int ar5523_switch_channel(struct ar5523 *ar)
 {
 	int error;
 
@@ -1004,7 +990,7 @@ static void ar5523_data_tx_cb(struct urb
 
 	txi->flags |= IEEE80211_TX_STAT_ACK;
 	ieee80211_tx_status_irqsafe(ar->hw, skb);
- out:
+out:
 	atomic_dec(&ar->tx_data_queued);
 	usb_free_urb(urb);
 }
@@ -1073,9 +1059,9 @@ static void ar5523_tx(struct ieee80211_h
 
 	return;
 
- out_free_urb:
+out_free_urb:
 	usb_free_urb(urb);
- out_free_skb:
+out_free_skb:
 	kfree_skb(skb);
 	return;
 }
@@ -1113,9 +1099,6 @@ static void ar5523_remove_interface(stru
 	ar->vif = NULL;
 }
 
-
-
-
 static int ar5523_hwconfig(struct ieee80211_hw *hw, u32 changed)
 {
 	struct ar5523 *ar = hw->priv;
@@ -1185,9 +1168,9 @@ static int ar5523_set_basic_rates(struct
 }
 
 
-static int
-ar5523_create_connection(struct ar5523 *ar, struct ieee80211_vif *vif,
-			 struct ieee80211_bss_conf *bss)
+static int ar5523_create_connection(struct ar5523 *ar,
+				     struct ieee80211_vif *vif,
+				     struct ieee80211_bss_conf *bss)
 {
 	struct ar5523_cmd_create_connection create;
 
@@ -1209,8 +1192,8 @@ ar5523_create_connection(struct ar5523 *
 
 }
 
-static int
-ar5523_write_associd(struct ar5523 *ar, struct ieee80211_bss_conf *bss)
+static int ar5523_write_associd(struct ar5523 *ar,
+				 struct ieee80211_bss_conf *bss)
 {
 	struct ar5523_cmd_set_associd associd;
 
@@ -1223,8 +1206,6 @@ ar5523_write_associd(struct ar5523 *ar,
 	    sizeof associd, 0);
 }
 
-
-
 static void ar5523_bss_info_changed(struct ieee80211_hw *hw,
 		struct ieee80211_vif *vif,
 		struct ieee80211_bss_conf *bss,
@@ -1325,7 +1306,6 @@ static const struct ieee80211_ops ar5523
 	.configure_filter	= ar5523_configure_filter,
 };
 
-
 static void ar5523_free_tx_cmds(struct ar5523 *ar)
 {
 	int i;
@@ -1377,7 +1357,7 @@ static int ar5523_alloc_tx_cmds(struct a
 	}
 	return 0;
 
- out:
+out:
  	while (--i >= 0) {
 		struct ar5523_tx_cmd *cmd = &ar->tx_cmd[i];
 
@@ -1393,7 +1373,6 @@ static int ar5523_alloc_tx_cmds(struct a
 	return error;
 }
 
-
 static int ar5523_host_available(struct ar5523 *ar)
 {
 	struct uath_cmd_host_available setup;
@@ -1407,9 +1386,6 @@ static int ar5523_host_available(struct
 		&setup, sizeof setup, NULL, 0, 0);
 }
 
-
-
-
 static int
 ar5523_get_devstatus(struct ar5523 *ar)
 {
