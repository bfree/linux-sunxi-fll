From 4da8c9b172206222e2182adc3170f4ecc6e31365 Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Sun, 2 Sep 2012 15:20:27 +0200
Subject: [PATCH 11/82] Add filtering

---
 ar5523.c |   41 ++++++++++++++++++++++++++++++-----------
 1 file changed, 30 insertions(+), 11 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -609,7 +609,6 @@ static int ar5523_set_chan(struct ar5523
 
 	struct ar5523_cmd_reset reset;
 
-	printk("Set chan to %d\n", conf->channel->center_freq);
 	memset(&reset, 0, sizeof(reset));
 	reset.flags |= cpu_to_be32(UATH_CHAN_2GHZ);
 	reset.flags |= cpu_to_be32(UATH_CHAN_OFDM);
@@ -751,8 +750,8 @@ static void ar5523_data_rx_cb(struct urb
 
 	rxlen = be32_to_cpu(desc->len);
 	if (rxlen > ar->rxbufsz) {
-		ar5523_err(ar, "bad descriptor (len=%d)\n",
-			       be32_to_cpu(desc->len));
+		ar5523_dbg(ar, "bad descriptor (len=%d)\n",
+			   be32_to_cpu(desc->len));
 		goto skip;
 	}
 
@@ -760,7 +759,7 @@ static void ar5523_data_rx_cb(struct urb
 		goto skip;
 
 	if (be32_to_cpu(desc->status) != 0) {
-		ar5523_err(ar, "Bad RX status (0x%x). Skip\n", be32_to_cpu(desc->status));
+		ar5523_dbg(ar, "Bad RX status (0x%x). Skip\n", be32_to_cpu(desc->status));
 		goto skip;
 	}
 
@@ -924,17 +923,16 @@ static int ar5523_start(struct ieee80211
 		goto err;
 	}
 
-
 	val = cpu_to_be32(TARGET_DEVICE_AWAKE);
 	ar5523_cmd_write(ar, WDCMSG_SET_PWR_MODE, &val, sizeof val, 0);
 	/* XXX? check */
 	ar5523_cmd_write(ar, WDCMSG_RESET_KEY_CACHE, NULL, 0, 0);
 
 	/* enable Rx */
-	ar5523_set_rxfilter(ar, 0x0, UATH_FILTER_OP_INIT);
+	ar5523_set_rxfilter(ar, 0, UATH_FILTER_OP_INIT);
 	ar5523_set_rxfilter(ar,
 	    UATH_FILTER_RX_UCAST | UATH_FILTER_RX_MCAST |
-	    UATH_FILTER_RX_BCAST | UATH_FILTER_RX_BEACON,
+	    UATH_FILTER_RX_BCAST,
 	    UATH_FILTER_OP_SET);
 
 	ar5523_dbg(ar, "start OK\n");
@@ -1164,7 +1162,8 @@ static void ar5523_create_rateset(struct
 	band = ar->hw->wiphy->bands[ar->hw->conf.channel->band];
 	for (bit = 0; bit < band->n_bitrates; bit++) {
 		BUG_ON(i >= AR5523_MAX_NRATES);
-		printk("Considering rate %d : %d\n", band->bitrates[bit].hw_value, sta_rate_set & 1);
+		ar5523_dbg(ar, "Considering rate %d : %d\n",
+			   band->bitrates[bit].hw_value, sta_rate_set & 1);
 		if (sta_rate_set & 1)
 			rs->set[i++] = band->bitrates[bit].hw_value;
 		sta_rate_set >>= 1;
@@ -1283,17 +1282,37 @@ out_unlock:
 
 }
 
+#define AR5523_SUPPORTED_FILTERS (FIF_PROMISC_IN_BSS | \
+				  FIF_ALLMULTI | \
+				  FIF_FCSFAIL | \
+				  FIF_BCN_PRBRESP_PROMISC | \
+				  FIF_OTHER_BSS)
+
 static void ar5523_configure_filter(struct ieee80211_hw *hw,
 		unsigned int changed_flags, unsigned int *total_flags,
 		u64 multicast)
 {
 	struct ar5523 *ar = hw->priv;
+	u32 filter = 0;
 
-	mutex_lock(&ar->mutex);
 	ar5523_dbg(ar, "configure_filter called\n");
+	mutex_lock(&ar->mutex);
+
+	*total_flags &= AR5523_SUPPORTED_FILTERS;
+
+	if (*total_flags & FIF_BCN_PRBRESP_PROMISC)
+		filter |= UATH_FILTER_RX_BEACON;
+
+	if (*total_flags & FIF_PROMISC_IN_BSS ||
+	    *total_flags & FIF_OTHER_BSS)
+		filter |= UATH_FILTER_RX_PROM;
+
+	filter |= UATH_FILTER_RX_UCAST | UATH_FILTER_RX_MCAST |
+		  UATH_FILTER_RX_BCAST;
+
+	ar5523_set_rxfilter(ar, 0, UATH_FILTER_OP_INIT);
+	ar5523_set_rxfilter(ar, filter, UATH_FILTER_OP_SET);
 
-	/* XXX: implement properly */
-	*total_flags = 0;
 	mutex_unlock(&ar->mutex);
 }
 
