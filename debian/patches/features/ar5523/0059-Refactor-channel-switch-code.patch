From dec53411eb99d7acb44d5392bb5318ecd0c26a4b Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Sun, 30 Sep 2012 22:24:02 +0200
Subject: [PATCH 59/82] Refactor channel switch code

Put it into one function.
---
 ar5523.c |   55 ++++++++++++++++++++++++++++---------------------------
 1 file changed, 28 insertions(+), 27 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -626,6 +626,32 @@ static int ar5523_wme_init(struct ar5523
 				 &qinfo, sizeof(qinfo), 0);
 }
 
+static int ar5523_switch_chan(struct ar5523 *ar)
+{
+	int error;
+
+	error = ar5523_set_chan(ar);
+	if (error) {
+		ar5523_err(ar, "could not set chan, error %d\n", error);
+		goto out_err;
+	}
+
+	/* reset Tx rings */
+	error = ar5523_reset_tx_queues(ar);
+	if (error) {
+		ar5523_err(ar, "could not reset Tx queues, error %d\n",
+			   error);
+		goto out_err;
+	}
+	/* set Tx rings WME properties */
+	error = ar5523_wme_init(ar);
+	if (error)
+		ar5523_err(ar, "could not init wme, error %d\n", error);
+
+out_err:
+	return error;
+}
+
 static void ar5523_data_rx_cb(struct urb *urb)
 {
 	struct ar5523_rx_data *data = urb->context;
@@ -984,7 +1010,6 @@ static void ar5523_tx_work_locked(struct
 		} else
 			atomic_inc(&ar->tx_nr_pending);
 	} while (true);
-
 }
 
 static void ar5523_tx_work(struct work_struct *work)
@@ -1054,12 +1079,7 @@ static int ar5523_start(struct ieee80211
 	ar5523_dbg(ar, "WDCMSG_TARGET_START returns handle: 0x%x\n",
 		   be32_to_cpu(val));
 
-	/* set default channel */
-	error = ar5523_set_chan(ar);
-	if (error) {
-		ar5523_err(ar, "could not switch channel, error %d\n", error);
-		goto err;
-	}
+	ar5523_switch_chan(ar);
 
 	val = cpu_to_be32(TARGET_DEVICE_AWAKE);
 	ar5523_cmd_write(ar, WDCMSG_SET_PWR_MODE, &val, sizeof(val), 0);
@@ -1160,33 +1180,14 @@ static void ar5523_remove_interface(stru
 static int ar5523_hwconfig(struct ieee80211_hw *hw, u32 changed)
 {
 	struct ar5523 *ar = hw->priv;
-	int error;
 
 	mutex_lock(&ar->mutex);
 	ar5523_dbg(ar, "config called\n");
 	if (changed & IEEE80211_CONF_CHANGE_CHANNEL) {
 		ar5523_dbg(ar, "Do channel switch\n");
 		ar5523_flush_tx(ar);
-		error = ar5523_set_chan(ar);
-		if (error) {
-			ar5523_err(ar, "could not set chan, error %d\n", error);
-			goto out_unlock;
-		}
-
-		/* reset Tx rings */
-		error = ar5523_reset_tx_queues(ar);
-		if (error) {
-			ar5523_err(ar, "could not reset Tx queues, error %d\n",
-				   error);
-			goto out_unlock;
-		}
-		/* set Tx rings WME properties */
-		error = ar5523_wme_init(ar);
-		if (error)
-			ar5523_err(ar, "could not init wme, error %d\n", error);
-
+		ar5523_switch_chan(ar);
 	}
-out_unlock:
 	mutex_unlock(&ar->mutex);
 	return 0;
 }
