From a2ebe1f30ac82b1bd75a2daa05d8656a8fdaa31b Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Thu, 23 Aug 2012 12:22:44 +0200
Subject: [PATCH 04/82] ar5523: Improve rate control.

The firmware does the rate control. Send enabled rates to the FW on
association.
---
 ar5523.c |   34 ++++++++++++++++++++++++++++------
 1 file changed, 28 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -499,13 +499,34 @@ static int ar5523_tx_null(struct ar5523
 }
 
 static int ar5523_set_rates(struct ar5523 *ar,
-			    struct ieee80211_bss_conf *ifconf)
+			    struct ieee80211_vif *vif,
+			    struct ieee80211_bss_conf *bss_conf)
 {
-        struct ar5523_cmd_rates rates;
+	struct ar5523_cmd_rates rates;
+	struct ieee80211_supported_band *band;
+	struct ieee80211_sta *sta;
+	int bit, i = 0;
+	u32 sta_rate_set;
+
+	sta = ieee80211_find_sta(vif, bss_conf->bssid);
+	if (!sta) {
+		ar5523_info(ar, "STA not found. Cannot set rates\n");
+		return -1;
+	}
+	sta_rate_set = sta->supp_rates[ar->hw->conf.channel->band];
+	ar5523_dbg(ar, "sta rate_set = %08x\n", sta_rate_set);
 
 	memset(&rates, 0, sizeof(rates));
 	rates.magic1 = cpu_to_be32(0x02);
 
+	band = ar->hw->wiphy->bands[ar->hw->conf.channel->band];
+	for (bit = 0; bit < band->n_bitrates; bit++) {
+		if (sta_rate_set & 1)
+			rates.rates[i++] = band->bitrates[bit].hw_value;
+		sta_rate_set >>= 1;
+	}
+
+	rates.nrates = i;
 	return ar5523_cmd_write(ar, AR5523_CMD_SET_RATES,
 				&rates, sizeof(rates), 0);
 }
@@ -680,7 +701,7 @@ static int ar5523_start(struct ieee80211
 	ar5523_write_multi(ar, 0x13, &ar->hw->wiphy->perm_addr,
 			   AR5523_ADDR_LEN);
 
-	ar5523_write_reg(ar, 0x02, 0x00000001);
+	ar5523_write_reg(ar, 0x02, 0x00000001);	//Rate control enable
 	ar5523_write_reg(ar, 0x0e, 0x0000003f);
 	ar5523_write_reg(ar, 0x10, 0x00000001);
 	ar5523_write_reg(ar, 0x06, 0x0000001e);
@@ -966,7 +987,7 @@ static void ar5523_bss_info_changed(stru
 
 	ar5523_cmd_write(ar, AR5523_CMD_24, NULL, 0, 0);
 
-	if (!(changed & BSS_CHANGED_BSSID))
+	if (!(changed & BSS_CHANGED_ASSOC))
 		return;
 
 	memset(&bssid, 0, sizeof(bssid));
@@ -985,7 +1006,7 @@ static void ar5523_bss_info_changed(stru
 	cmd0c.magic3 = cpu_to_be32(1);
 	ar5523_cmd_write(ar, AR5523_CMD_0C, &cmd0c, sizeof(cmd0c), 0);
 
-	error = ar5523_set_rates(ar, ifconf);
+	error = ar5523_set_rates(ar, vif, ifconf);
 	if (error) {
 		ar5523_err(ar, "could not set negotiated rate set\n");
 		return;
@@ -1506,7 +1527,8 @@ static int ar5523_probe(struct usb_inter
 	ar->mode = NL80211_IFTYPE_MONITOR;
 
 	hw->flags = IEEE80211_HW_RX_INCLUDES_FCS |
-		    IEEE80211_HW_SIGNAL_DBM;
+		    IEEE80211_HW_SIGNAL_DBM |
+		    IEEE80211_HW_HAS_RATE_CONTROL;
 	hw->extra_tx_headroom = sizeof(struct ar5523_tx_desc) + sizeof(__be32);
 	hw->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION);
 	hw->queues = 1;
