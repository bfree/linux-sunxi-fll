Fix urb status handling.

Changes-licensed-under: ISC
Signed-off-by: Antonio Galea <ant9000@netwise.it>
Signed-off-by: Riccardo Magliocchetti <riccardo.magliocchetti@gmail.com>
Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -531,12 +531,19 @@ static void ar5523_data_rx_cb(struct urb
 	int error;
 
 	/* sync/async unlink faults aren't errors */
-	if (urb->status) {
-		ar5523_dbg(ar, "non-zero write bulk status received: %d\n",
-			       urb->status);
+	if (urb->status && (urb->status != -ENOENT &&
+	    urb->status != -ECONNRESET && urb->status != -ESHUTDOWN)) {
+		ar5523_dbg(ar,
+			   "nonzero write bulk status received: %d\n",
+			   urb->status);
 		goto skip;
 	}
 
+	if (urb->status) {
+		/* do not try to resubmit urb */
+		return;
+	}
+
 	if (len < AR5523_MIN_RXBUFSZ) {
 		ar5523_err(ar, "wrong xfer size (len=%d)\n", len);
 //		ifp->if_ierrors++;
@@ -791,9 +798,11 @@ static void ar5523_data_tx_cb(struct urb
 	ar5523_dbg(ar, "data tx urb completed\n");
 
 	/* sync/async unlink faults aren't errors */
-	if (urb->status) {
-		ar5523_dbg(ar, "non-zero write bulk status received: %d\n",
-			       urb->status);
+	if (urb->status && (urb->status != -ENOENT &&
+	    urb->status != -ECONNRESET && urb->status != -ESHUTDOWN)) {
+		ar5523_dbg(ar,
+			   "nonzero write bulk status received: %d\n",
+			   urb->status);
 		goto out;
 	}
 
@@ -1077,12 +1086,19 @@ static void ar5523_cmd_rx_cb(struct urb
 	int error;
 
 	/* sync/async unlink faults aren't errors */
-	if (urb->status) {
-		ar5523_dbg(ar, "non-zero write bulk status received: %d\n",
-			       urb->status);
+	if (urb->status && (urb->status != -ENOENT &&
+	    urb->status != -ECONNRESET && urb->status != -ESHUTDOWN)) {
+		ar5523_dbg(ar,
+			   "nonzero write bulk status received: %d\n",
+			   urb->status);
 		goto resubmit;
 	}
 
+	if (urb->status) {
+		/* do not try to resubmit urb */
+		return;
+	}
+
 	switch (be32_to_cpu(hdr->code) & 0xff) {
 	default:
 		/* reply to a read command */
