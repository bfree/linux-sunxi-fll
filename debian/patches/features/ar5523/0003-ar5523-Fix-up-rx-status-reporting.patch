From 303c010776dc3f7ec0683fe28ea4a7d04aac1ada Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Thu, 23 Aug 2012 12:13:44 +0200
Subject: [PATCH 03/82] ar5523: Fix up rx status reporting

* Signal level reporting was missing / broken.
* Set the status directly in the skb instead of copying
---
 ar5523.c |   21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -516,7 +516,7 @@ static void ar5523_data_rx_cb(struct urb
 	struct ar5523 *ar = data->ar;
 	struct ar5523_rx_desc *desc;
 	struct ieee80211_hw *hw = ar->hw;
-	struct ieee80211_rx_status rx_status = { 0 };
+	struct ieee80211_rx_status *rx_status;
 	int len = urb->actual_length;
 	int hdrlen, pad;
 	u32 hdr;
@@ -566,17 +566,13 @@ static void ar5523_data_rx_cb(struct urb
 		skb_pull(data->skb, pad);
 	}
 
-	/*
-	 * XXX: not a whole lot of information provided here..
-	 *
-	 * need to poke into the descriptor if there might be more useful
-	 * information in there.
-	 */
-	rx_status.freq = be32_to_cpu(desc->freq);
-	rx_status.band = hw->conf.channel->band;
-	rx_status.signal = be32_to_cpu(desc->rssi);
 
-	memcpy(IEEE80211_SKB_RXCB(data->skb), &rx_status, sizeof(rx_status));
+	rx_status = IEEE80211_SKB_RXCB(data->skb);
+	memset(rx_status, 0, sizeof(*rx_status));
+	rx_status->freq = be32_to_cpu(desc->freq);
+	rx_status->band = hw->conf.channel->band;
+	rx_status->signal = -95 + be32_to_cpu(desc->rssi);
+
 	ieee80211_rx_irqsafe(hw, data->skb);
 	
 	data->skb = __dev_alloc_skb(ar->rxbufsz, GFP_ATOMIC);
@@ -1509,7 +1505,8 @@ static int ar5523_probe(struct usb_inter
 
 	ar->mode = NL80211_IFTYPE_MONITOR;
 
-	hw->flags |= IEEE80211_HW_RX_INCLUDES_FCS;
+	hw->flags = IEEE80211_HW_RX_INCLUDES_FCS |
+		    IEEE80211_HW_SIGNAL_DBM;
 	hw->extra_tx_headroom = sizeof(struct ar5523_tx_desc) + sizeof(__be32);
 	hw->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION);
 	hw->queues = 1;
