From fffb9b3f83079728084efad3eb1ca6cdc4397c72 Mon Sep 17 00:00:00 2001
From: Pontus Fuchs <pontus.fuchs@gmail.com>
Date: Fri, 28 Sep 2012 20:12:15 +0200
Subject: [PATCH 56/82] Whitespace and style cleanups

---
 ar5523.c |  105 +++++++++++++++++++++++++++-----------------------------------
 1 file changed, 46 insertions(+), 59 deletions(-)

--- a/drivers/net/wireless/ath/ar5523/ar5523.c
+++ b/drivers/net/wireless/ath/ar5523/ar5523.c
@@ -63,19 +63,16 @@
  * Various supported device vendors/products.
  * UB51: AR5005UG 802.11b/g, UB52: AR5005UX 802.11a/b/g
  */
-enum {
-	AR5523_FLAG_PRE_FIRMWARE	= (1 << 0),
-	AR5523_FLAG_ABG			= (1 << 1),
-};
+#define AR5523_FLAG_PRE_FIRMWARE	(1 << 0)
+#define AR5523_FLAG_ABG			(1 << 1)
 
 #define AR5523_FIRMWARE_FILE	"ar5523.bin"
 
-enum {
-	AR5523_CMD_TX_PIPE	= 0x01,
-	AR5523_DATA_TX_PIPE	= 0x02,
-	AR5523_CMD_RX_PIPE	= 0x81,
-	AR5523_DATA_RX_PIPE	= 0x82,
-};
+#define AR5523_CMD_TX_PIPE	0x01
+#define	AR5523_DATA_TX_PIPE	0x02
+#define	AR5523_CMD_RX_PIPE	0x81
+#define	AR5523_DATA_RX_PIPE	0x82
+
 #define ar5523_cmd_tx_pipe(dev) \
 	usb_sndbulkpipe((dev), AR5523_CMD_TX_PIPE)
 #define ar5523_data_tx_pipe(dev) \
@@ -85,17 +82,13 @@ enum {
 #define ar5523_data_rx_pipe(dev) \
 	usb_rcvbulkpipe((dev), AR5523_DATA_RX_PIPE)
 
-enum {
-	AR5523_DATA_TIMEOUT		= 10000,
-	AR5523_CMD_TIMEOUT		= 1000,
-};
+#define	AR5523_DATA_TIMEOUT	10000
+#define	AR5523_CMD_TIMEOUT	1000
 
-enum {
-	AR5523_TX_DATA_COUNT	= 16,
-	AR5523_TX_DATA_RESTART_COUNT = 4,
-	AR5523_RX_DATA_COUNT	= 16,
-	AR5523_RX_DATA_REFILL_COUNT = 8,
-};
+#define AR5523_TX_DATA_COUNT		16
+#define AR5523_TX_DATA_RESTART_COUNT	4
+#define AR5523_RX_DATA_COUNT		16
+#define AR5523_RX_DATA_REFILL_COUNT	8
 
 #define AR5523_CMD_ID	1
 #define AR5523_DATA_ID	2
@@ -175,11 +168,9 @@ struct ar5523 {
 };
 
 /* flags for sending firmware commands */
-enum {
-	AR5523_CMD_FLAG_ASYNC	= (1 << 0),
-	AR5523_CMD_FLAG_READ	= (1 << 1),
-	AR5523_CMD_FLAG_MAGIC	= (1 << 2),
-};
+#define AR5523_CMD_FLAG_ASYNC	(1 << 0)
+#define AR5523_CMD_FLAG_READ	(1 << 1)
+#define AR5523_CMD_FLAG_MAGIC	(1 << 2)
 
 #define ar5523_dbg(ar, format, arg...) \
 	dev_dbg(&(ar)->dev->dev, format, ## arg)
@@ -199,7 +190,7 @@ static void ar5523_data_tx_pkt_put(struc
  * TX/RX command handling.
  */
 static void ar5523_read_reply(struct ar5523 *ar, struct ar5523_cmd_hdr *hdr,
-			       struct ar5523_tx_cmd *cmd)
+			      struct ar5523_tx_cmd *cmd)
 {
 	int dlen, olen;
 	u32 *rp;
@@ -378,7 +369,7 @@ static void ar5523_cmd_tx_cb(struct urb
 }
 
 static int ar5523_cmd(struct ar5523 *ar, u32 code, const void *idata,
-		int ilen, void *odata, int olen, int flags)
+		      int ilen, void *odata, int olen, int flags)
 {
 	struct ar5523_cmd_hdr *hdr;
 	struct ar5523_tx_cmd *cmd = &ar->tx_cmd;
@@ -410,7 +401,7 @@ static int ar5523_cmd(struct ar5523 *ar,
 	error = usb_submit_urb(cmd->urb_tx, GFP_KERNEL);
 	if (error) {
 		ar5523_err(ar, "could not send command 0x%x, error=%d\n",
-			       code, error);
+			   code, error);
 		return error;
 	}
 
@@ -425,14 +416,14 @@ static int ar5523_cmd(struct ar5523 *ar,
 }
 
 static int ar5523_cmd_write(struct ar5523 *ar, u32 code, const void *data,
-		int len, int flags)
+			    int len, int flags)
 {
 	flags &= ~AR5523_CMD_FLAG_READ;
 	return ar5523_cmd(ar, code, data, len, NULL, 0, flags);
 }
 
 static int ar5523_cmd_read(struct ar5523 *ar, u32 code, const void *idata,
-		int ilen, void *odata, int olen, int flags)
+			   int ilen, void *odata, int olen, int flags)
 {
 	flags |= AR5523_CMD_FLAG_READ;
 	return ar5523_cmd(ar, code, idata, ilen, odata, olen, flags);
@@ -455,7 +446,7 @@ static int ar5523_config(struct ar5523 *
 }
 
 static int ar5523_config_multi(struct ar5523 *ar, u32 reg, const void *data,
-				int len)
+			       int len)
 {
 	struct ar5523_write_mac write;
 	int error;
@@ -475,7 +466,7 @@ static int ar5523_config_multi(struct ar
 }
 
 static int ar5523_get_status(struct ar5523 *ar, u32 which, void *odata,
-			      int olen)
+			     int olen)
 {
 	int error;
 
@@ -497,7 +488,7 @@ static int ar5523_get_capability(struct
 	    &cap, sizeof(cap), val, sizeof(u32), AR5523_CMD_FLAG_MAGIC);
 	if (error != 0) {
 		ar5523_err(ar, "could not read capability %u\n",
-		    be32_to_cpu(cap));
+			   be32_to_cpu(cap));
 		return error;
 	}
 	*val = be32_to_cpu(*val);
@@ -580,7 +571,7 @@ static int ar5523_set_rxfilter(struct ar
 
 	ar5523_dbg(ar, "setting Rx filter=0x%x flags=0x%x\n", bits, op);
 	return ar5523_cmd_write(ar, WDCMSG_RX_FILTER, &rxfilter,
-	    sizeof(rxfilter), 0);
+				 sizeof(rxfilter), 0);
 }
 
 static int ar5523_reset_tx_queues(struct ar5523 *ar)
@@ -828,7 +819,6 @@ err:
 	return -ENOMEM;
 }
 
-
 static void ar5523_data_tx_pkt_put(struct ar5523 *ar)
 {
 	atomic_dec(&ar->tx_nr_total);
@@ -893,7 +883,6 @@ static void ar5523_tx(struct ieee80211_h
 	list_add_tail(&data->list, &ar->tx_queue_pending);
 	spin_unlock_irqrestore(&ar->tx_data_list_lock, flags);
 
-
 	ieee80211_queue_work(ar->hw, &ar->tx_work);
 }
 
@@ -1051,8 +1040,8 @@ static int ar5523_start(struct ieee80211
 		ar5523_dbg(ar, "could not start target, error %d\n", error);
 		goto err;
 	}
-	ar5523_dbg(ar, "%s returns handle: 0x%x\n",
-	    "WDCMSG_TARGET_START", be32_to_cpu(val));
+	ar5523_dbg(ar, "WDCMSG_TARGET_START returns handle: 0x%x\n",
+		   be32_to_cpu(val));
 
 	/* set default channel */
 	error = ar5523_set_chan(ar);
@@ -1126,7 +1115,7 @@ static void ar5523_flush(struct ieee8021
 }
 
 static int ar5523_add_interface(struct ieee80211_hw *hw,
-		struct ieee80211_vif *vif)
+				struct ieee80211_vif *vif)
 {
 	struct ar5523 *ar = hw->priv;
 
@@ -1149,12 +1138,11 @@ static int ar5523_add_interface(struct i
 }
 
 static void ar5523_remove_interface(struct ieee80211_hw *hw,
-		struct ieee80211_vif *vif)
+				    struct ieee80211_vif *vif)
 {
 	struct ar5523 *ar = hw->priv;
 
 	ar5523_dbg(ar, "remove interface called\n");
-
 	ar->vif = NULL;
 }
 
@@ -1189,12 +1177,11 @@ static int ar5523_hwconfig(struct ieee80
 	}
 out_unlock:
 	mutex_unlock(&ar->mutex);
-
 	return 0;
 }
 
 static int ar5523_get_wlan_mode(struct ar5523 *ar,
-				 struct ieee80211_bss_conf *bss_conf)
+				struct ieee80211_bss_conf *bss_conf)
 {
 	struct ieee80211_supported_band *band;
 	int bit;
@@ -1268,7 +1255,7 @@ static void ar5523_create_rateset(struct
 }
 
 static int ar5523_set_basic_rates(struct ar5523 *ar,
-			    struct ieee80211_bss_conf *bss)
+				  struct ieee80211_bss_conf *bss)
 {
 	struct ar5523_cmd_rates rates;
 
@@ -1282,8 +1269,8 @@ static int ar5523_set_basic_rates(struct
 }
 
 static int ar5523_create_connection(struct ar5523 *ar,
-				     struct ieee80211_vif *vif,
-				     struct ieee80211_bss_conf *bss)
+				    struct ieee80211_vif *vif,
+				    struct ieee80211_bss_conf *bss)
 {
 	struct ar5523_cmd_create_connection create;
 	int wlan_mode;
@@ -1304,7 +1291,7 @@ static int ar5523_create_connection(stru
 }
 
 static int ar5523_write_associd(struct ar5523 *ar,
-				 struct ieee80211_bss_conf *bss)
+				struct ieee80211_bss_conf *bss)
 {
 	struct ar5523_cmd_set_associd associd;
 
@@ -1318,9 +1305,9 @@ static int ar5523_write_associd(struct a
 }
 
 static void ar5523_bss_info_changed(struct ieee80211_hw *hw,
-		struct ieee80211_vif *vif,
-		struct ieee80211_bss_conf *bss,
-		u32 changed)
+				    struct ieee80211_vif *vif,
+				    struct ieee80211_bss_conf *bss,
+				    u32 changed)
 {
 	struct ar5523 *ar = hw->priv;
 	int error;
@@ -1353,10 +1340,10 @@ static void ar5523_bss_info_changed(stru
 
 		/* turn link LED on */
 		ar5523_set_ledsteady(ar, UATH_LED_LINK, UATH_LED_ON);
-		set_bit(AR5523_CONNECTED, &ar->flags); 
+		set_bit(AR5523_CONNECTED, &ar->flags);
 
 	} else {
-		clear_bit(AR5523_CONNECTED, &ar->flags); 
+		clear_bit(AR5523_CONNECTED, &ar->flags);
 		ar5523_set_ledsteady(ar, UATH_LED_LINK, UATH_LED_OFF);
 	}
 
@@ -1371,8 +1358,9 @@ out_unlock:
 				  FIF_OTHER_BSS)
 
 static void ar5523_configure_filter(struct ieee80211_hw *hw,
-		unsigned int changed_flags, unsigned int *total_flags,
-		u64 multicast)
+				    unsigned int changed_flags,
+				    unsigned int *total_flags,
+				    u64 multicast)
 {
 	struct ar5523 *ar = hw->priv;
 	u32 filter = 0;
@@ -1610,7 +1598,7 @@ static int ar5523_load_firmware(struct u
 				     AR5523_CMD_TIMEOUT);
 		if (error) {
 			dev_err(&dev->dev,
-				 "could not send firmware block info\n");
+				"could not send firmware block info\n");
 			goto out_free_fwbuf;
 		}
 
@@ -1621,7 +1609,7 @@ static int ar5523_load_firmware(struct u
 				     AR5523_DATA_TIMEOUT);
 		if (error) {
 			dev_err(&dev->dev,
-				 "could not send firmware block data\n");
+				"could not send firmware block data\n");
 			goto out_free_fwbuf;
 		}
 
@@ -1631,7 +1619,7 @@ static int ar5523_load_firmware(struct u
 				     AR5523_CMD_TIMEOUT);
 		if (error) {
 			dev_err(&dev->dev,
-				 "could not read firmware answer\n");
+				"could not read firmware answer\n");
 			goto out_free_fwbuf;
 		}
 
@@ -1656,9 +1644,8 @@ static int ar5523_load_firmware(struct u
 	return error;
 }
 
-
 static int ar5523_probe(struct usb_interface *intf,
-		const struct usb_device_id *id)
+			const struct usb_device_id *id)
 {
 	struct usb_device *dev = interface_to_usbdev(intf);
 	struct ieee80211_hw *hw;
